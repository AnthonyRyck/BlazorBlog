@inject IGalerieViewModel ViewModel

<MudDialog>
    <DialogContent>
        <MudPaper @ondragenter="@SetDragClass" 
                                    @ondragleave="@ClearDragClass" 
                                    @ondragend="@ClearDragClass" 
                                    Height="200px" 
                                    Outlined="true" 
                                    Class="@DragClass">
                            <InputFile OnChange="@ViewModel.OnInputFileChanged"
                                        class="absolute mud-width-full mud-height-full overflow-hidden z-2" 
                                        style="opacity:0;"
                                        multiple accept="@AcceptExtensions" />
                            
                            <MudText Typo="Typo.h6">Déposez l'image (max 3 Mo) ou cliquez</MudText>
        </MudPaper>

        <MudPaper>
            <MudTextField @bind-Value="@ViewModel.ImageRecherche" 
                        Placeholder="Rechercher une image" 
                        Adornment="Adornment.Start" 
                        AdornmentIcon="@Icons.Material.Filled.Search" 
                        IconSize="Size.Medium" 
                        />
        </MudPaper>

        @if(ViewModel.ImagesToDisplay.Count > 0)
        {
        <MudStack Row="true" Justify="Justify.FlexStart" Class="flex-wrap">
           @foreach(var img in ViewModel.ImagesToDisplay)
            {
               <MudImage src="@img" 
                        ObjectFit="ObjectFit.ScaleDown" 
                        Class="border-1-px-solid-black"
                        Width="150" Height="150"
						click="(() => SubmitImage(img))" />
            }
        
        </MudStack>

        <div class="d-flex flex-column align-center">
            <MudPagination ShowFirstButton="true" 
                            ShowLastButton="true" 
                            Count="ViewModel.CounterPage"
                            SelectedChanged="ViewModel.PageChanged"
                            Class="mt-4"/>
            </div>
        }
        else
        {
        <div>Aucune image de trouvée.</div>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string AcceptExtensions { get; set; }


    protected override void OnParametersSet()
    {
        if(!string.IsNullOrEmpty(AcceptExtensions))
        {
            ViewModel.SetExtensions(AcceptExtensions);
        }

        base.OnParametersSet();
    }

    void SubmitImage(string img) => MudDialog.Close(DialogResult.Ok(img));

    void Cancel() => MudDialog.Cancel();


    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full";
    private string DragClass = DefaultDragClass;
    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        DragClass = DefaultDragClass;
    }
}