@page "/articles"
@attribute [Authorize(Roles = "Admin, Compositeur")]
@inject IArticlesViewModel ViewModel

<Title Value="Articles" />

<h3>Articles</h3>

<MudDataGrid T="PostView" 
            Items="@ViewModel.AllPosts"
			 QuickFilter="@ViewModel.FiltrerPost"
            ReadOnly="true"
            Bordered="true"
			 Sortable="true"
            Dense="true" >

	<ToolBarContent>
        <MudText Typo="Typo.h6">Liste des articles</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="@ViewModel.PostRecherche" 
                        Placeholder="Recherche" 
                        Adornment="Adornment.Start" 
                        Immediate="true"
                        AdornmentIcon="@Icons.Material.Filled.Search" 
                        IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <Column T="PostView" Field="Title" Title="Titre" IsEditable="false">
            <CellTemplate>
                <MudPaper>
                    @context.Item.Title
                </MudPaper>
                @if(context.Item.IsPublished)
                {
                <MudIconButton Icon="@Icons.Filled.RemoveRedEye" 
                                    Size="Size.Small" 
                                    Color="Color.Primary"
                                    OnClick="(() => ViewModel.OpenPostToRead(context.Item.Id))" />
                }
            </CellTemplate>
        </Column>
        
        <Column T="PostView" Field="Categories" Title="Catégorie" IsEditable="false" Sortable="false">
	        <CellTemplate>
                @foreach(Categorie categorie in context.Item.Categories)
                {
                 <MudChip Text="@categorie.Nom" Size="Size.Small" />   
                }
            </CellTemplate>
		</Column>

        <Column T="PostView" Field="UserId" Title="Auteur" IsEditable="false" />
        <Column T="PostView" Field="Posted" Title="Date" IsEditable="false">
	        <CellTemplate>
				@if(context.Item.Posted.HasValue)
				{
					<div>Publié</div>
					<div>@context.Item.Posted.Value.ToString("F");</div>
                }
                else
                {
                    <div>Dernière modification</div>
                    <div>@context.Item.UpdatedAt.ToString("F")</div>
                }
            </CellTemplate>
		</Column>
		
		<Column T="PostView">
            <CellTemplate>
                <MudFab Color="Color.Primary"
				        Size="Size.Small"
                        StartIcon="@Icons.Material.Filled.Edit" 
                        OnClick="@(() => ViewModel.EditPost(context.Item.Id))" />
            </CellTemplate>
        </Column>
		
		<Column T="PostView">
            <CellTemplate>
                <MudFab Color="Color.Secondary"
						Size="Size.Small"
                        StartIcon="@Icons.Material.Filled.DeleteForever" 
                        OnClick="@(() => ViewModel.DeletePost(context.Item.Id))" />
            </CellTemplate>
        </Column>
		
    </Columns>
</MudDataGrid>

@code {
    protected async override Task OnInitializedAsync()
    {
		await ViewModel.GetArticles();
    }
}
