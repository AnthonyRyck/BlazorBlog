@page "/post/{idPost:int}"
@layout UserLayout
@inject IDisplayPostViewModel viewModel
@inject SettingsSvc svcSetting

<Meta name="og:image" content="@viewModel.Article.Image"/>
<Meta name="og:title" content="@viewModel.Article.Title" />
<!-- Open Graph / Facebook -->
<Meta name="og:type" content="website" />

<!-- Twitter -->
<Meta name="twitter:card" content="summary_large_image" />
<Meta name="twitter:title" content="@viewModel.Article.Title" />
<Meta name="twitter:image" content="@viewModel.Article.Image" />

@if(viewModel.IsLoading)
{
	<Title Value="Chargement..." />
	<div>Chargement de l'article...</div>   
}
else
{
    @if(viewModel.Article == null)
    {
        <Title Value="Oups" />
    	<h3>Oups</h3>
    
    <MudText Typo="Typo.body1">Aucun article trouvé à cette adresse.</MudText>
    
    <div class="d-flex justify-center">
    	<MudImage Src="images/nothing.jpg" 
    			Class="rounded-lg"
    			ObjectPosition="ObjectPosition.Center" />
    </div>
    }
    else
    {
		<Title Value="@viewModel.Article.Title" />
		
    <div class="center-content post-title" style="background-image:url(@viewModel.Article.Image)">
	    <div class="imagefade">
            <h1>@viewModel.Article.Title</h1>
    		<span>@viewModel.Article.UserId / @viewModel.Article.Posted.Value.ToString("D")</span>
            @foreach (Categorie categorie in viewModel.Categories)
            {
             <MudChip Color="Color.Info" OnClick="(() => viewModel.OpenCategoriePosts(categorie.IdCategorie))">@categorie.Nom</MudChip>
            }
        </div>
    </div>
	
	<div class="post-content">
        <MudMarkdown Value="@viewModel.Article.Content" 
	        		CodeBlockTheme="CodeBlockTheme.AtomOneDark" />

		<div class="post-share">
		    <MudText Typo="Typo.body1">Partager sur : </MudText>
			<MudIconButton Icon="@Icons.Custom.Brands.LinkedIn"
						    Size="Size.Small"
                          Title="LinkedIn" 
						    Color="Color.Default"
                          Href="@viewModel.UrlShareLinkedIn" 
                          Target="_blank"
                          Disabled="@viewModel.DisabledShare" />

            <MudIconButton Icon="@Icons.Custom.Brands.Twitter"
						    Size="Size.Small"
                          Title="Twitter" 
                          Color="Color.Default"
                          Href="@viewModel.UrlShareTwitter" 
                          Target="_blank"
                          Disabled="@viewModel.DisabledShare"/>						

            <MudIconButton Icon="@Icons.Custom.Brands.Facebook"
						    Size="Size.Small"
                          Title="Facebook" 
                          Color="Color.Default"
                          Href="@viewModel.UrlShareFacebook" 
                          Target="_blank"
                          Disabled="@viewModel.DisabledShare"/>						
        </div>
    </div>


    }
}

@code {
    [Parameter]
    public int idPost { get; set; }

    protected async override Task OnInitializedAsync()
    {
		await viewModel.LoadPost(idPost);
    }
}
