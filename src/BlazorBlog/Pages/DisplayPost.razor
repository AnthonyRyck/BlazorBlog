@page "/post/{idPost:int}"
@page "/preview/{idPostPreview:int}"
@layout UserLayout
@inject IDisplayPostViewModel viewModel


@if(viewModel.IsLoading)
{
	<Title Value="Chargement..." />
	<div>Chargement de l'article...</div>   
}
else
{
    @if(viewModel.Article == null)
    {
        <Title Value="Oups" />
    	<h3>Oups</h3>
    
    <MudText Typo="Typo.body1">Aucun article trouvé à cette adresse.</MudText>
    
    <div class="d-flex justify-center">
    	<MudImage Src="images/nothing.jpg" 
    			Class="rounded-lg"
    			ObjectPosition="ObjectPosition.Center" />
        </div>
    }
    else
    {
        @if (!IsPreview)
        {
            <HeadContent>
                @* OpenGraph meta tags *@
                <meta property="og:title" content="@viewModel.Article.Title" />
                <meta property="og:author" content="@viewModel.Article.UserId" />
                <meta property="og:image" content="@viewModel.Article.Image"/>

                @*Twitter specific meta tags *@
                <meta property="twitter:title" content="@viewModel.Article.Title">
                <meta property="twitter:card" content="summary_large_image">
                <meta property="twitter:image" content="@viewModel.Article.Image">
            </HeadContent>
        }	

		<Title Value="@viewModel.Article.Title" />
		
    <div class="center-content post-title" style="background-image:url(@viewModel.Article.Image)">
	    <div class="imagefade">
            <h1>@viewModel.Article.Title</h1>
            
            @if (!IsPreview)
            {
                @if(!string.IsNullOrEmpty(viewModel.Avatar))
                {
    		    <MudAvatar Image="@viewModel.Avatar" Size="Size.Medium" /> 
                }
             <span>@viewModel.Article.UserId / @viewModel.Article.Posted.Value.ToString("D")</span>
            }

            @foreach (Categorie categorie in viewModel.Categories)
            {
             <MudChip Color="Color.Info" OnClick="(() => viewModel.OpenCategoriePosts(categorie.IdCategorie))">@categorie.Nom</MudChip>
            }
        </div>
    </div>
	
	<div class="post-content">
        <MudMarkdown Value="@viewModel.Article.Content" 
	        		CodeBlockTheme="CodeBlockTheme.AtomOneDark" />
        @if (!IsPreview)
        {
            <div class="post-share">
                <MudText Typo="Typo.body1">Partager sur : </MudText>
                <MudIconButton Icon="@Icons.Custom.Brands.LinkedIn"
		                Size="Size.Small"
                      Title="LinkedIn" 
		    Color="Color.Default"
                      Href="@viewModel.UrlShareLinkedIn" 
                      Target="_blank"
                      Disabled="@viewModel.DisabledShare" />

                <MudIconButton Icon="@Icons.Custom.Brands.Twitter"
		                Size="Size.Small"
                      Title="Twitter" 
                      Color="Color.Default"
                      Href="@viewModel.UrlShareTwitter" 
                      Target="_blank"
                      Disabled="@viewModel.DisabledShare"/>					
            </div>
        }
        </div>
    }
}

@code {
    [Parameter]
    public int idPost { get; set; }

    [Parameter]
    public int idPostPreview { get; set; }

    private bool IsPreview { get; set; }

    protected async override void OnParametersSet()
    {
        if(idPost > 0 && idPostPreview == 0)
        {
            await viewModel.LoadPost(idPost, false);
            IsPreview = false;
        }

        if(idPost == 0 && idPostPreview > 0)
        {
            await viewModel.LoadPost(idPostPreview, true);
            IsPreview = true;
        }

        StateHasChanged();
    }
}
