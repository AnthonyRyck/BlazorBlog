@page "/"
@page "/categorie/{IdCategorie:int}"
@inject IIndexViewModel ViewModel
@inject SettingsSvc SvcSettings

<PageTitle>@SvcSettings.BlogName</PageTitle>

<HeadContent>
    @* OpenGraph meta tags *@
    <meta property="og:title" content="@SvcSettings.BlogName" />
    <meta property="og:image" content="@SvcSettings.BlogImage" />
	<meta property="og:description" content="@SvcSettings.BlogDescription" />

    @*Twitter specific meta tags *@
    <meta property="twitter:title" content="@SvcSettings.BlogName">
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:image" content="@SvcSettings.BlogImage">
	<meta property="twitter:description" content="@SvcSettings.BlogDescription">

    <meta name="robots" content="index, follow" />
	<meta name="description" content="SvcSettings.BlogDescription" />
	<meta name="keywords" content="blog, blazor" />
</HeadContent>

@if(ViewModel.CategorieSelected != null)
{
    <h1><u>Catégorie</u>: @ViewModel.CategorieSelected.Nom</h1>
}

<MudStack Row="true" Justify="Justify.FlexStart" Class="flex-wrap">

    @foreach (Post post in ViewModel.PostsToDisplay)
    {
       <CardPost Image="@post.Image"
                Titre="@post.Title"
                User="@post.UserId"
                Date="@post.Posted.Value"
                OnClickPost="@(() => ViewModel.OpenPost(post.Id))" />
    }

</MudStack>

<div class="d-flex flex-column align-center">
    <MudPagination ShowFirstButton="true" 
                    ShowLastButton="true" 
                    Count="ViewModel.CounterPage"
                    SelectedChanged="ViewModel.PageChanged"
                    Class="mt-4"/>
</div>

@code{
    [Parameter]
    public int? IdCategorie { get; set; }


    protected async override Task OnInitializedAsync()
    {
        await ViewModel.GetAllPosts(IdCategorie);
    }
}